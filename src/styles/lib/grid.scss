$CONFIG_GRID_SPACING:             5px;
$CONFIG_GRID_MAX_COLUMNS:         24;
$CONFIG_GRID_GUTTER:              5px;

$CONFIG_FLEXGRID_LARGE_BREAKPOINT:  1156px + $CONFIG_GRID_GUTTER;
$CONFIG_FLEXGRID_SMALL_BREAKPOINT:  769px;
$CONFIG_FLEXGRID_MIN_CANVAS_WIDTH:  320px;

$CONFIG_GRID_IS_RESPONSIVE:       true;
$CONFIG_GRID_LARGE_BREAKPOINT:    1128px;
$CONFIG_GRID_SMALL_BREAKPOINT:    769px;
$CONFIG_GRID_LARGE_PADDING:       30px;
$CONFIG_GRID_SMALL_PADDING:       18px;
$CONFIG_GRID_SCROLLBAR_WIDTH:     20px;
$CONFIG_GRID_COL_WIDTH_LARGE:     24px;
$CONFIG_GRID_COL_WIDTH_SMALL:     16px;

// Breakpoint mixin for setting grid breakpoints
// @mixin     breakpoint
// @param     $point {String} the name of desired breakpoint: papa-bear, mama-bear, baby-bear
@mixin breakpoint($point) {
  @if $point == papa-bear {
    @media (min-width: $CONFIG_FLEXGRID_LARGE_BREAKPOINT) { @content; }
  }
  @else if $point == mama-bear {
    @media (max-width: $CONFIG_FLEXGRID_LARGE_BREAKPOINT) and (min-width: $CONFIG_FLEXGRID_SMALL_BREAKPOINT) { @content; }
  }
  @else if $point == baby-bear {
    @media (max-width: $CONFIG_FLEXGRID_SMALL_BREAKPOINT)  { @content; }
  }
}

@mixin grid-canvas() {
  width: $CONFIG_GRID_LARGE_BREAKPOINT;
  box-sizing: content-box;
  padding: 0 $CONFIG_GRID_LARGE_PADDING;
  display: block;
  margin: auto;
  position: relative;

  @if($CONFIG_GRID_IS_RESPONSIVE){
    @media (max-width: ($CONFIG_GRID_LARGE_BREAKPOINT + (2 * $CONFIG_GRID_LARGE_PADDING) + $CONFIG_GRID_SCROLLBAR_WIDTH)) {
      width: calc(100vw - #{$CONFIG_GRID_SCROLLBAR_WIDTH});
      box-sizing: border-box;
    }

    @media (max-width: 976px) {
      padding: 0 $CONFIG_GRID_SMALL_PADDING;
    }
  }
}

@function large-width($cols){
  $staticCols: ($cols - 1) * $CONFIG_GRID_COL_WIDTH_LARGE;
  @if($staticCols > 0px){ $staticCols: unquote("+ #{$staticCols}"); }
  @else if($staticCols < 0px){ $staticCols: unquote("- #{-1 * $staticCols}"); }
  @else{ $staticCols: unquote(""); }
  @return unquote("(#{$CONFIG_GRID_LARGE_BREAKPOINT - ($CONFIG_GRID_MAX_COLUMNS - 1) * $CONFIG_GRID_COL_WIDTH_LARGE} * #{$cols / $CONFIG_GRID_MAX_COLUMNS}) #{$staticCols}");
}
@function medium-width($cols){
  $staticCols: ($cols - 1) * $CONFIG_GRID_COL_WIDTH_LARGE;
  @if($staticCols > 0px){ $staticCols: unquote("+ #{$staticCols}"); }
  @else if($staticCols < 0px){ $staticCols: unquote("- #{-1 * $staticCols}"); }
  @else{ $staticCols: unquote(""); }
  @return unquote("((100vw - #{(2 * $CONFIG_GRID_LARGE_PADDING) + $CONFIG_GRID_SCROLLBAR_WIDTH + ($CONFIG_GRID_MAX_COLUMNS - 1) * $CONFIG_GRID_COL_WIDTH_LARGE}) * #{$cols / $CONFIG_GRID_MAX_COLUMNS}) #{$staticCols}");
}
@function small-width($cols){
  $staticCols: ($cols - 1) * $CONFIG_GRID_COL_WIDTH_SMALL;
  @if($staticCols > 0px){ $staticCols: unquote("+ #{$staticCols}"); }
  @else if($staticCols < 0px){ $staticCols: unquote("- #{-1 * $staticCols}"); }
  @else{ $staticCols: unquote(""); }
  @return unquote("((100vw - #{(2 * $CONFIG_GRID_SMALL_PADDING) + $CONFIG_GRID_SCROLLBAR_WIDTH + ($CONFIG_GRID_MAX_COLUMNS - 1) * $CONFIG_GRID_COL_WIDTH_SMALL}) * #{$cols / $CONFIG_GRID_MAX_COLUMNS}) #{$staticCols}");
}

@function push-offset($size, $first){
  @return unquote(if($first, "+ #{$size}", ""));
}

@function pull-offset($size, $first){
  @return unquote(if($first, "", "+ #{$size}"));
}

@function grid-offset($size, $first){
  $offsetSize: $size + if($first, 0px, $size) + if($first, 0px, 1px);
  @return unquote(if($offsetSize, "+ #{$offsetSize}", ""));
}

@mixin grid($columns, $first: false, $preserve: false, $offset: 0, $push: 0, $pull: 0, $vertical-spacing: 3) {

  box-sizing: border-box;
  float: left;
  margin-bottom: $vertical-spacing * 8px;
  margin-right: -1px;
  @if($push > 0 or $pull > 0){ position: relative; }

  width: calc(#{large-width($columns)});
  @if($columns != 24){
    margin-left: calc(#{large-width($offset) grid-offset($CONFIG_GRID_COL_WIDTH_LARGE, $first)});
  }
  @if($push > 0){
    left: calc(#{large-width($push) push-offset($CONFIG_GRID_COL_WIDTH_LARGE, $first)});
  }
  @if($pull > 0){
    right: calc(#{large-width($pull) pull-offset($CONFIG_GRID_COL_WIDTH_LARGE, $first)});
  }
  @if($CONFIG_GRID_IS_RESPONSIVE){
    @media (max-width: ($CONFIG_GRID_LARGE_BREAKPOINT + 2 * $CONFIG_GRID_LARGE_PADDING + $CONFIG_GRID_SCROLLBAR_WIDTH)) {
      width: calc(#{medium-width($columns)});
      @if($columns != 24){
        margin-left: calc(#{medium-width($offset) grid-offset($CONFIG_GRID_COL_WIDTH_LARGE, $first)});
      }
      @if($push > 0){
        left: calc(#{medium-width($push) push-offset($CONFIG_GRID_COL_WIDTH_LARGE, $first)});
      }
      @if($pull > 0){
        right: calc(#{medium-width($pull) pull-offset($CONFIG_GRID_COL_WIDTH_LARGE, $first)});
      }
    }

    @media (max-width: 976px) {
      width: calc(#{small-width($columns)});
      margin-bottom: $vertical-spacing * 4px;
      @if($columns != 24){
        margin-left: calc(#{small-width($offset) grid-offset($CONFIG_GRID_COL_WIDTH_SMALL, $first)});
      }
      @if($push > 0){
        left: calc(#{small-width($push) push-offset($CONFIG_GRID_COL_WIDTH_SMALL, $first)});
      }
      @if($pull > 0){
        right: calc(#{small-width($pull) pull-offset($CONFIG_GRID_COL_WIDTH_SMALL, $first)});
      }
    }

    // Baby-bear Grid Element Sizing and Positioning
    @include breakpoint(baby-bear){
      // Reset Push and Pull, Go Full Width and Remove Offset
      left: 0;
      right: 0;
      width: 100%;
      margin-left: 0;
      margin-right: 0;
    }
  }
}
